name: Test and Validate

on:
  workflow_call: {}

env:
  NODE_VERSION: "22"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            lambdas/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install dependencies
        run: |
          set -e
          echo "🔧 Installing root dependencies..."
          npm ci
          echo "🔧 Installing Lambda dependencies..."
          for dir in lambdas/*/; do
            if [ -f "$dir/package.json" ]; then
              echo "📦 Installing dependencies in $dir"
              cd "$dir" && npm ci && cd ../..
            fi
          done

      - name: 🔍 Run linting
        run: npm run lint

      - name: 🧪 Run unit tests
        run: npm run test:unit

      - name: 📊 Upload test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-coverage
          path: coverage/
          retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        run: npm audit --audit-level=moderate

      - name: 📊 Check for outdated packages
        run: npm outdated || true
